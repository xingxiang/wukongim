version: '3.7'

x-wukongim-common: &wukongim-common  # 公共配置
    # image: registry.cn-shanghai.aliyuncs.com/wukongim/wukongim:v2.0.10-20241221-dev
    build:
      context: ../../
      dockerfile: Dockerfile
    healthcheck:
      test: "wget -q -Y off -O /dev/null http://localhost:5001/health > /dev/null 2>&1"
      interval: 10s
      timeout: 10s
      retries: 3   

services:
  wukongim1:
    <<: *wukongim-common
    container_name: wukongim1
    environment:
      - "WK_CLUSTER_NODEID=1001"  # 节点ID，必须数字
      - "WK_STRESS=true" # 是否开启压测
      - "WK_MODE=release" # 运行模式
      - "WK_INTRANET_TCPADDR=127.0.0.1:15100"
      - "WK_EXTERNAL_WSADDR=ws://127.0.0.1:15200"  # 节点对外WS地址， 这里IP视情况修改
      - "WK_EXTERNAL_TCPADDR=127.0.0.1:15100" # 节点对外TCP地址， 这里IP视情况修改
      - "WK_CLUSTER_SERVERADDR=node1.wk.local:11110"
      - "WK_CLUSTER_INITNODES=1001@node1.wk.local 1002@node2.wk.local 1003@node3.wk.local" # 集群节点列表
      - "WK_CLUSTER_APIURL=http://node1.wk.local:5001" # 节点对外API地址
      - "WK_TRACE_PROMETHEUSAPIURL=http://prometheus.wk.local:9090" # 监控地址
      - "WK_TRACE_ENDPOINT=http://jaeger.wk.local:4318" # jaeger数据追踪地址
    networks:
      wukongim-bridge:
        aliases:
        - node1.wk.local # docker内部别名
    volumes:
      - ./wukongim1_data:/root/wukongim # 数据挂载到物理机的目录

  wukongim2:
    <<: *wukongim-common
    container_name: wukongim2
    environment:
      - "WK_CLUSTER_NODEID=1002"
      - "WK_STRESS=true" # 是否开启压测
      - "WK_MODE=release" # 运行模式
      - "WK_INTRANET_TCPADDR=127.0.0.1:15100"
      - "WK_EXTERNAL_WSADDR=ws://127.0.0.1:15200"  # 节点对外WS地址， 这里IP视情况修改
      - "WK_EXTERNAL_TCPADDR=127.0.0.1:15100" # 节点对外TCP地址， 这里IP视情况修改
      - "WK_CLUSTER_SERVERADDR=node2.wk.local:11110"
      - "WK_CLUSTER_INITNODES=1001@node1.wk.local 1002@node2.wk.local 1003@node3.wk.local" # 集群节点列表
      - "WK_CLUSTER_APIURL=http://node2.wk.local:5001"
      - "WK_TRACE_PROMETHEUSAPIURL=http://prometheus.wk.local:9090" # 监控地址
      - "WK_TRACE_ENDPOINT=http://jaeger.wk.local:4318" # jaeger数据追踪地址
    networks:
      wukongim-bridge:
        aliases:
        - node2.wk.local
    volumes:
      - ./wukongim2_data:/root/wukongim    

  wukongim3:
    <<: *wukongim-common
    container_name: wukongim3
    environment:
      - "WK_CLUSTER_NODEID=1003"
      - "WK_STRESS=true" # 是否开启压测
      - "WK_MODE=release" # 运行模式
      - "WK_INTRANET_TCPADDR=127.0.0.1:15100"
      - "WK_EXTERNAL_WSADDR=ws://127.0.0.1:15200"  # 节点对外WS地址， 这里IP视情况修改
      - "WK_EXTERNAL_TCPADDR=127.0.0.1:15100" # 节点对外TCP地址， 这里IP视情况修改
      - "WK_CLUSTER_SERVERADDR=node3.wk.local:11110"
      - "WK_CLUSTER_INITNODES=1001@node1.wk.local 1002@node2.wk.local 1003@node3.wk.local" # 集群节点列表
      - "WK_CLUSTER_APIURL=http://node3.wk.local:5001"
    networks:
      wukongim-bridge:
        aliases:
        - node3.wk.local
    volumes:
      - ./wukongim3_data:/root/wukongim  
  prometheus: 
    image: registry.cn-shanghai.aliyuncs.com/wukongim/prometheus:v2.53.1
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      wukongim-bridge:
        aliases:
        - prometheus.wk.local  
    ports:
      - "9090:9090"    
  nginx:
    image: registry.cn-shanghai.aliyuncs.com/wukongim/nginx:1.27.0
    container_name: apigateway
    hostname: apigateway
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      wukongim-bridge:
        aliases:
        - apigateway.wk.local  
    depends_on:
      - wukongim1
      - wukongim2
      - wukongim3
    ports:
      - "15001:5001" # api端口
      - "15100:5100" # tcp端口
      - "15200:5200" # ws端口
      - "15300:5300" # manager端口
      - "15172:5172" # demo端口

networks:
  wukongim-bridge:
    driver: bridge